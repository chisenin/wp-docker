# WordPress Docker环境变量配置参考
# 重要说明：
# 1. 此文件仅作为GitHub Actions构建的参考配置
# 2. Windows本地开发环境不需要创建实际的.env文件
# 3. 生产环境的.env文件将由auto_deploy.sh脚本在Linux服务器上自动生成
# 4. 请勿在本地复制此文件创建.env文件，这是不必要的
# 5. 注意：当前使用官方MariaDB和Redis镜像，配置通过环境变量传递

# Docker相关配置 - 仅用于构建参考
DOCKERHUB_USERNAME=your_dockerhub_username  # Docker Hub用户名
PHP_VERSION=8.3.26  # PHP版本
NGINX_VERSION=1.27.2  # Nginx版本

# 构建参考值 - 生产环境将使用随机生成的安全密码
MYSQL_ROOT_PASSWORD=build_reference_only  # 仅用于构建参考，生产环境将自动生成
MYSQL_DATABASE=wordpress  # WordPress数据库名称
MYSQL_USER=wordpress  # WordPress数据库用户
MYSQL_PASSWORD=build_reference_only  # 仅用于构建参考，生产环境将自动生成

# 构建参考值 - WordPress配置
WORDPRESS_DB_HOST=mariadb:3306  # 数据库主机
WORDPRESS_DB_USER=${MYSQL_USER}  # WordPress数据库用户
WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}  # WordPress数据库密码
WORDPRESS_DB_NAME=${MYSQL_DATABASE}  # WordPress数据库名称
WORDPRESS_TABLE_PREFIX=wp_  # WordPress数据库表前缀

# 构建参考值 - Redis配置
REDIS_HOST=redis  # Redis主机
REDIS_PORT=6379  # Redis端口
REDIS_PASSWORD=build_reference_only  # 仅用于构建参考，生产环境将自动生成
REDIS_MAXMEMORY=256mb  # Redis最大内存限制

# 构建参考值 - 性能配置
PHP_MEMORY_LIMIT=512M  # PHP内存限制
UPLOAD_MAX_FILESIZE=64M  # 最大上传文件大小

# 构建参考值 - WordPress安全密钥
# 生产环境将自动从WordPress API获取随机密钥
WORDPRESS_AUTH_KEY=build_reference_only
WORDPRESS_SECURE_AUTH_KEY=build_reference_only
WORDPRESS_LOGGED_IN_KEY=build_reference_only
WORDPRESS_NONCE_KEY=build_reference_only
WORDPRESS_AUTH_SALT=build_reference_only
WORDPRESS_SECURE_AUTH_SALT=build_reference_only
WORDPRESS_LOGGED_IN_SALT=build_reference_only
WORDPRESS_NONCE_SALT=build_reference_only